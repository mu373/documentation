name: PR Preview

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  preview:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
        
    - name: Set up uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        
    - name: Install Python dependencies
      run: uv sync
        
    - name: Set up bun
      uses: oven-sh/setup-bun@v2
        
    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Convert notebooks
      run: bun run nb-build

    - name: Build docusaurus
      run: bun run build

    - name: Deploy preview to Cloudflare Workers
      id: wrangler-upload
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: >
          versions upload --config wrangler.jsonc
          --message "${{ github.event.pull_request.title }}"

    - name: Get Preview URL
      shell: bash
      id: get-preview-url
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      run: |
        set -euo pipefail
        WORKER=$(jq -r '.name' wrangler.jsonc)
        ACCOUNT_SUB="${{ secrets.CLOUDFLARE_SUBDOMAIN }}"

        VERSION_ID=$(npx wrangler versions list --config wrangler.jsonc | grep -Eo 'Version ID:\s*[a-zA-Z0-9]+' | tail -n1 | sed 's/Version ID:\s*//')

        if [ -n "$VERSION_ID" ]; then
          PREVIEW_URL="https://${VERSION_ID}-${WORKER}.${ACCOUNT_SUB}.workers.dev/docs/"
        else
          BRANCH="${{ github.head_ref || github.ref_name }}"
          PREVIEW_URL="https://${BRANCH}-${WORKER}.${ACCOUNT_SUB}.workers.dev/docs/"
        fi

        echo "$PREVIEW_URL"
        echo "preview_url=$PREVIEW_URL" >> "$GITHUB_OUTPUT"

    - name: Generate PR comment text for deploy status
      run: |
        bun scripts/cloudflare-deploy-comment.mjs \
          --status "Ready" \
          --preview-url "${{ steps.get-preview-url.outputs.preview_url }}" \
          --context "pull_request" \
          --updated "$(date -u '+%b %d, %Y %-I:%M%P')" \
          --out "comment.txt"

    - name: Post a comment on PR
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh pr comment ${{ github.event.number }} --edit-last --create-if-none --body-file comment.txt
